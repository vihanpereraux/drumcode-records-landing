(()=>{"use strict";const t={float32Concat:function(t,e){t instanceof Float32Array||(t=new Float32Array(t)),e instanceof Float32Array||(e=new Float32Array(e));const i=new Float32Array(t.length+e.length);return i.set(t),i.set(e,t.length),i}};Math.randomSeed=1,Math.seededRandom=function(t,e){return 0===Math.randomSeed&&(Math.randomSeed=999*Math.random()),t=t||1,e=e||0,Math.randomSeed=(9301*Math.randomSeed+49297)%233280,e+Math.randomSeed/233280*(t-e)},t.arrayWriteToEnd=function(t,e){for(let e=1;e<t.length;e++)t[e-1]=t[e];t[t.length-1]=e},t.isNumeric=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},t.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)},String.prototype.endl=function(){return this+"\n"},String.prototype.startsWith=function(t){return 0===this.indexOf(t)},String.prototype.endsWith=String.prototype.endsWith||function(t){return this.match(t+"$")==t},window.performance=window.performance||{offset:Date.now(),now:function(){return Date.now()-this.offset}};class e{constructor(t){this._logs=[],this.initiator=t}stack(t){console.info("["+this.initiator+"] ",t),console.log((new Error).stack)}groupCollapsed(t){console.groupCollapsed("["+this.initiator+"] "+t)}table(t){console.table(t)}groupEnd(){console.groupEnd()}error(t){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"error",arguments)}info(t){console.error("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"info",arguments)}warn(t){console.warn("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"warn",arguments)}verbose(){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"verbose",arguments)}log(t){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments),window.gui&&window.gui.emitEvent("coreLogEvent",this.initiator,"log",arguments)}userInteraction(t){}}const i=function(t,r={}){if(!t)throw new Error("no cgl");this._log=new e("cgl_texture"),this._cgl=t,this.pixelFormat=r.pixelFormat||i.PFORMATSTR_RGBA8UB,this.tex=this._cgl.gl.createTexture(),this.id=CABLES.uuid(),this.width=0,this.height=0,this.loading=!1,this.flip=!0,this.flipped=!1,this.shadowMap=!1,this.deleted=!1,this.image=null,this.anisotropic=0,this.filter=i.FILTER_NEAREST,this.wrap=i.WRAP_CLAMP_TO_EDGE,this.texTarget=this._cgl.gl.TEXTURE_2D,r&&r.type&&(this.texTarget=r.type),this.textureType=i.TYPE_DEFAULT,this.unpackAlpha=!0,this._fromData=!0,this.name="unknown",this._glDataType=-1,this._glInternalFormat=-1,this._glDataFormat=-1,r?(this.name=r.name||this.name,r.isDepthTexture&&(this.textureType=i.TYPE_DEPTH),!0===r.isFloatingPointTexture&&(this.textureType=i.TYPE_FLOAT),"textureType"in r&&(this.textureType=r.textureType),"filter"in r&&(this.filter=r.filter),"wrap"in r&&(this.wrap=r.wrap),"unpackAlpha"in r&&(this.unpackAlpha=r.unpackAlpha),"flip"in r&&(this.flip=r.flip),"shadowMap"in r&&(this.shadowMap=r.shadowMap),"anisotropic"in r&&(this.anisotropic=r.anisotropic)):r={},!r.pixelFormat&&r.isFloatingPointTexture&&(this.pixelFormat=i.PFORMATSTR_RGBA32F),this.textureType==i.TYPE_DEPTH&&(this.pixelFormat=i.PFORMATSTR_DEPTH),r.width||(r.width=8),r.height||(r.height=8),this._cgl.profileData.profileTextureNew++,this.setFormat(i.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this._cgl.profileData.addHeavyEvent("texture created",this.name,r.width+"x"+r.height),this.setSize(r.width,r.height),this.getInfoOneLine()};i.prototype.isFloatingPoint=function(){return i.isPixelFormatFloat(this.pixelFormat)},i.prototype.compareSettings=function(t){return!!t&&t.width==this.width&&t.height==this.height&&t.filter==this.filter&&t.wrap==this.wrap&&t.textureType==this.textureType&&t.unpackAlpha==this.unpackAlpha&&t.anisotropic==this.anisotropic&&t.shadowMap==this.shadowMap&&t.texTarget==this.texTarget&&t.flip==this.flip},i.prototype.clone=function(){const t=new i(this._cgl,{name:this.name,filter:this.filter,anisotropic:this.anisotropic,wrap:this.wrap,textureType:this.textureType,pixelFormat:this.pixelFormat,unpackAlpha:this.unpackAlpha,flip:this.flip,width:this.width,height:this.height});return this._cgl.profileData.addHeavyEvent("texture created",this.name,this.width+"x"+this.height),this.compareSettings(t)||(this._log.error("Cloned texture settings do not compare!"),this._log.error(this),this._log.error(t)),t},i.prototype.setFormat=function(t){this.pixelFormat=t.pixelFormat,this._glDataFormat=t.glDataFormat,this._glInternalFormat=t.glInternalFormat,this._glDataType=t.glDataType},i.setUpGlPixelFormat=function(t,e){const r={};e||(console.log("no pixelformatstr!"),console.log((new Error).stack),e=i.PFORMATSTR_RGBA8UB),r.pixelFormatBase=e,t.glUseHalfFloatTex&&(e==i.PFORMATSTR_RGBA32F&&(e=i.PFORMATSTR_RGBA16F),e==i.PFORMATSTR_RG32F&&(e=i.PFORMATSTR_RG16F),e==i.PFORMATSTR_R32F&&(e=i.PFORMATSTR_R16F)),r.pixelFormat=e,r.glDataType=t.gl.UNSIGNED_BYTE,r.glInternalFormat=t.gl.RGBA8,r.glDataFormat=t.gl.RGBA;let l=t.gl.FLOAT;if(1==t.glVersion&&(r.glInternalFormat=t.gl.RGBA,e==i.PFORMATSTR_RGBA16F||e==i.PFORMATSTR_RG16F||e==i.PFORMATSTR_R16F)){const e=t.enableExtension("OES_texture_half_float");if(!e)throw new Error("no half float texture extension");l=e.HALF_FLOAT_OES}return e==i.PFORMATSTR_RGBA8UB||(e==i.PFORMATSTR_RGB565?(r.glInternalFormat=t.gl.RGB565,r.glDataFormat=t.gl.RGB):e==i.PFORMATSTR_R8UB?(r.glInternalFormat=t.gl.R8,r.glDataFormat=t.gl.RED):e==i.PFORMATSTR_RG8UB?(r.glInternalFormat=t.gl.RG8,r.glDataFormat=t.gl.RG):e==i.PFORMATSTR_RGB8UB?(r.glInternalFormat=t.gl.RGB8,r.glDataFormat=t.gl.RGB):e==i.PFORMATSTR_SRGBA8?r.glInternalFormat=t.gl.SRGB8_ALPHA8:e==i.PFORMATSTR_R32F?(r.glInternalFormat=t.gl.R32F,r.glDataFormat=t.gl.RED,r.glDataType=l):e==i.PFORMATSTR_R16F?(r.glInternalFormat=t.gl.R16F,r.glDataType=l,r.glDataFormat=t.gl.RED):e==i.PFORMATSTR_RG16F?(r.glInternalFormat=t.gl.RG16F,r.glDataType=l,r.glDataFormat=t.gl.RG):e==i.PFORMATSTR_RGBA16F?(1==t.glVersion?r.glInternalFormat=t.gl.RGBA:r.glInternalFormat=t.gl.RGBA16F,r.glDataType=l):e==i.PFORMATSTR_R11FG11FB10F?(r.glInternalFormat=t.gl.R11F_G11F_B10F,r.glDataType=l,r.glDataFormat=t.gl.RGB):e==i.PFORMATSTR_RGBA32F?(1==t.glVersion?r.glInternalFormat=t.gl.RGBA:r.glInternalFormat=t.gl.RGBA32F,r.glDataType=l):e==i.PFORMATSTR_DEPTH?1==t.glVersion?(r.glInternalFormat=t.gl.DEPTH_COMPONENT,r.glDataType=t.gl.UNSIGNED_SHORT,r.glDataFormat=t.gl.DEPTH_COMPONENT):(r.glInternalFormat=t.gl.DEPTH_COMPONENT32F,r.glDataType=t.gl.FLOAT,r.glDataFormat=t.gl.DEPTH_COMPONENT):console.log("unknown pixelformat ",e)),(e.indexOf("32bit")||e==i.PFORMATSTR_R11FG11FB10F)&&(2==t.glVersion&&t.enableExtension("EXT_color_buffer_float"),2==t.glVersion&&t.enableExtension("EXT_float_blend"),t.enableExtension("OES_texture_float_linear")),e.indexOf("16bit")&&(t.enableExtension("EXT_color_buffer_half_float"),t.enableExtension("OES_texture_float_linear")),r.numColorChannels=1,0==e.indexOf("R")&&(r.numColorChannels=1),0==e.indexOf("RG")&&(r.numColorChannels=2),0==e.indexOf("RGB")&&(r.numColorChannels=3),0==e.indexOf("RGBA")&&(r.numColorChannels=4),r.glDataType&&r.glInternalFormat&&r.glDataFormat||console.log("pixelformat wrong ?!",e,r.glDataType,r.glInternalFormat,r.glDataFormat,this),r},i.prototype.setSize=function(t,e){this._cgl.aborted||((t!=t||t<=0||!t)&&(t=8),(e!=e||e<=0||!e)&&(e=8),(t>this._cgl.maxTexSize||e>this._cgl.maxTexSize)&&this._log.error("texture size too big! "+t+"x"+e+" / max: "+this._cgl.maxTexSize),t=Math.min(t,this._cgl.maxTexSize),e=Math.min(e,this._cgl.maxTexSize),t=Math.floor(t),e=Math.floor(e),(this.width!=t||this.height!=e)&&(this.width=t,this.height=e,this.deleted=!1,this.setFormat(i.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this.shortInfoString=this.getInfoOneLine(),this._cgl.gl.bindTexture(this.texTarget,this.tex),this._cgl.profileData.profileTextureResize++,this._cgl.gl.texImage2D(this.texTarget,0,this._glInternalFormat,t,e,0,this._glDataFormat,this._glDataType,null),this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null)))},i.prototype.initFromData=function(t,e,r,l,s){if(this.filter=l,this.wrap=s,null==l&&(this.filter=i.FILTER_LINEAR),null==s&&(this.wrap=i.WRAP_CLAMP_TO_EDGE),this.width=e,this.height=r,this._fromData=!0,this.deleted=!1,this.height>this._cgl.maxTexSize||this.width>this._cgl.maxTexSize){const t=CGL.Texture.getTempTexture(this._cgl);return this.width=t.width,this.height=t.height,this.tex=t.tex,void this._log.error("[cgl_texture] texture size to big!!!",this.width,this.height,this._cgl.maxTexSize)}this.flip&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,this.flip),this._cgl.gl.bindTexture(this.texTarget,this.tex),this.setFormat(i.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this._cgl.gl.texImage2D(this.texTarget,0,this._glInternalFormat,e,r,0,this._glDataFormat,this._glDataType,t),this._setFilter(),this.updateMipMap(),this.flip&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,!1),this._cgl.gl.bindTexture(this.texTarget,null)},i.prototype.updateMipMap=function(){2!=this._cgl.glVersion&&!this.isPowerOfTwo()||this.filter!=i.FILTER_MIPMAP||(this._cgl.gl.generateMipmap(this.texTarget),this._cgl.profileData.profileGenMipMap++)},i.prototype.initTexture=function(t,e){if(this._cgl.printError("before initTexture"),this._cgl.checkFrameStarted("texture inittexture"),this._fromData=!1,this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),t.width&&(this.width=t.width),t.height&&(this.height=t.height),e&&(this.filter=e),t.height>this._cgl.maxTexSize||t.width>this._cgl.maxTexSize){const e=CGL.Texture.getTempTexture(this._cgl);return this.width=e.width,this.height=e.height,this.tex=e.tex,void this._log.error("[cgl_texture] texture size to big!!!",t.width,t.height,this._cgl.maxTexSize)}this._cgl.gl.bindTexture(this.texTarget,this.tex),this.deleted=!1,this.flipped=!this.flip,this.flipped&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,this.flipped),this.setFormat(i.setUpGlPixelFormat(this._cgl,this.pixelFormat)),this._cgl.gl.texImage2D(this.texTarget,0,this._glInternalFormat,this._glDataFormat,this._glDataType,t),this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null),this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),this.flipped&&this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,!1),this.getInfoOneLine(),this._cgl.printError("initTexture")},i.prototype.delete=function(){this.loading||(this.deleted=!0,this.width=0,this.height=0,this._cgl.profileData.profileTextureDelete++,this._cgl.gl.deleteTexture(this.tex),this.image=null,this.tex=null)},i.prototype.isPowerOfTwo=function(){return i.isPowerOfTwo(this.width)&&i.isPowerOfTwo(this.height)},i.prototype.printInfo=function(){console.log(this.getInfo())},i.prototype.getInfoReadable=function(){const t=this.getInfo();let e="";t.name=t.name.substr(0,t.name.indexOf("?rnd="));for(const i in t)e+="* "+i+":  **"+t[i]+"**\n";return e},i.prototype.getInfoOneLine=function(){let t=this.width+"x"+this.height;return t+=" ",t+=this.pixelFormat,this.filter===CGL.Texture.FILTER_NEAREST&&(t+=" nearest"),this.filter===CGL.Texture.FILTER_LINEAR&&(t+=" linear"),this.filter===CGL.Texture.FILTER_MIPMAP&&(t+=" mipmap"),this.wrap===CGL.Texture.WRAP_CLAMP_TO_EDGE&&(t+=" clamp"),this.wrap===CGL.Texture.WRAP_REPEAT&&(t+=" repeat"),this.wrap===CGL.Texture.WRAP_MIRRORED_REPEAT&&(t+=" repeatmir"),this.shortInfoString=t,t},i.prototype.getInfoOneLineShort=function(){let t=this.width+"x"+this.height;return t+=" ",t+=this.pixelFormat,this.shortInfoString=t,t},i.prototype.getInfo=function(){return i.getTexInfo(this)},i.prototype._setFilter=function(){if(this._cgl.printError("before _setFilter"),this._fromData||this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),this.shadowMap&&(this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D,this._cgl.gl.TEXTURE_COMPARE_MODE,this._cgl.gl.COMPARE_REF_TO_TEXTURE),this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D,this._cgl.gl.TEXTURE_COMPARE_FUNC,this._cgl.gl.LEQUAL)),this.textureType==i.TYPE_FLOAT&&this.filter==i.FILTER_MIPMAP&&(this.filter=i.FILTER_LINEAR,this._log.stack("texture: HDR and mipmap filtering at the same time is not possible")),1!=this._cgl.glVersion||this.isPowerOfTwo()){if(this.wrap==i.WRAP_CLAMP_TO_EDGE?(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE)):this.wrap==i.WRAP_REPEAT?(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.REPEAT)):this.wrap==i.WRAP_MIRRORED_REPEAT&&(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.MIRRORED_REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.MIRRORED_REPEAT)),this.filter==i.FILTER_NEAREST)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST);else if(this.filter==i.FILTER_LINEAR)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR);else{if(this.filter!=i.FILTER_MIPMAP)throw this._log.log("unknown texture filter!",this.filter),new Error("unknown texture filter!"+this.filter);this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR_MIPMAP_LINEAR)}if(this.anisotropic){const t=this._cgl.enableExtension("EXT_texture_filter_anisotropic");if(this._cgl.maxAnisotropic){const e=Math.min(this._cgl.maxAnisotropic,this.anisotropic);this._cgl.gl.texParameterf(this._cgl.gl.TEXTURE_2D,t.TEXTURE_MAX_ANISOTROPY_EXT,e)}}}else this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE),this.filter=i.FILTER_NEAREST,this.wrap=i.WRAP_CLAMP_TO_EDGE;this.getInfoOneLine(),this._cgl.printError("_setFilter")},i.load=function(t,e,r,l){if(!e)return r({error:!0});let s=null;t.patch.loading.existByName(e)||(s=t.patch.loading.start("texture",e));const a=new i(t);return a.name=e,t.patch.isEditorMode()&&gui.jobs().start({id:"loadtexture"+s,title:"loading texture "+CABLES.basename(e)}),a.image=new Image,a.image.crossOrigin="anonymous",a.loading=!0,l&&l.hasOwnProperty("filter")&&(a.filter=l.filter),l&&l.hasOwnProperty("flip")&&(a.flip=l.flip),l&&l.hasOwnProperty("wrap")&&(a.wrap=l.wrap),l&&l.hasOwnProperty("anisotropic")&&(a.anisotropic=l.anisotropic),l&&l.hasOwnProperty("unpackAlpha")&&(a.unpackAlpha=l.unpackAlpha),l&&l.hasOwnProperty("pixelFormat")&&(a.pixelFormat=l.pixelFormat),a.image.onabort=a.image.onerror=i=>{console.warn("[cgl.texture.load] error loading texture",e,i),a.loading=!1,s&&t.patch.loading.finished(s),r&&r({error:!0},a),t.patch.isEditorMode()&&gui.jobs().finish("loadtexture"+s)},a.image.onload=function(e){t.addNextFrameOnceCallback((()=>{a.initTexture(a.image),s&&t.patch.loading.finished(s),a.loading=!1,t.patch.isEditorMode()&&gui.jobs().finish("loadtexture"+s),r&&r(null,a)}))},a.image.src=e,a},i.getTempTexture=function(t){return t||console.error("[getTempTexture] no cgl!"),t.tempTexture||(t.tempTexture=i.getTemporaryTexture(t,256,i.FILTER_LINEAR,i.REPEAT)),t.tempTexture},i.getErrorTexture=function(t){return t||console.error("[getTempTexture] no cgl!"),t.errorTexture||(t.errorTexture=i.getTemporaryTexture(t,256,i.FILTER_LINEAR,i.REPEAT,1,.2,.2)),t.errorTexture},i.getEmptyTexture=function(t,e){if(e)return i.getEmptyTextureFloat(t);if(t||console.error("[getEmptyTexture] no cgl!"),t.tempTextureEmpty)return t.tempTextureEmpty;t.tempTextureEmpty=new i(t,{name:"emptyTexture"});const r=new Uint8Array(256).fill(0);for(let t=0;t<256;t+=4)r[t+3]=0;return t.tempTextureEmpty.initFromData(r,8,8,i.FILTER_NEAREST,i.WRAP_REPEAT),t.tempTextureEmpty},i.getEmptyTextureFloat=function(t){if(t||console.error("[getEmptyTextureFloat] no cgl!"),t.tempTextureEmptyFloat)return t.tempTextureEmptyFloat;t.tempTextureEmptyFloat=new i(t,{name:"emptyTexture",isFloatingPointTexture:!0});const e=new Float32Array(256).fill(1);for(let t=0;t<256;t+=4)e[t+3]=0;return t.tempTextureEmptyFloat.initFromData(e,8,8,i.FILTER_NEAREST,i.WRAP_REPEAT),t.tempTextureEmptyFloat},i.getRandomTexture=function(t){if(t||console.error("[getRandomTexture] no cgl!"),t.randomTexture)return t.randomTexture;const e=new Uint8Array(262144);for(let t=0;t<65536;t++)e[4*t+0]=255*Math.random(),e[4*t+1]=255*Math.random(),e[4*t+2]=255*Math.random(),e[4*t+3]=255;return t.randomTexture=new i(t),t.randomTexture.initFromData(e,256,256,i.FILTER_NEAREST,i.WRAP_REPEAT),t.randomTexture},i.getRandomFloatTexture=function(t){if(t||console.error("[getRandomTexture] no cgl!"),t.getRandomFloatTexture)return t.getRandomFloatTexture;const e=new Float32Array(262144);for(let t=0;t<65536;t++)e[4*t+0]=2*(Math.random()-.5),e[4*t+1]=2*(Math.random()-.5),e[4*t+2]=2*(Math.random()-.5),e[4*t+3]=1;return t.getRandomFloatTexture=new i(t,{isFloatingPointTexture:!0}),t.getRandomFloatTexture.initFromData(e,256,256,i.FILTER_NEAREST,i.WRAP_REPEAT),t.getRandomFloatTexture},i.getBlackTexture=function(t){if(t||this._log.error("[getBlackTexture] no cgl!"),t.blackTexture)return t.blackTexture;const e=new Uint8Array(256);for(let t=0;t<64;t++)e[4*t+0]=e[4*t+1]=e[4*t+2]=0,e[4*t+3]=255;return t.blackTexture=new i(t),t.blackTexture.initFromData(e,8,8,i.FILTER_NEAREST,i.WRAP_REPEAT),t.blackTexture},i.getEmptyCubemapTexture=function(t){const e=[t.gl.TEXTURE_CUBE_MAP_POSITIVE_X,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,t.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,t.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z],r=t.gl.createTexture(),l=t.gl.TEXTURE_CUBE_MAP,s=i.FILTER_NEAREST,a=i.WRAP_CLAMP_TO_EDGE;t.profileData.profileTextureNew++,t.gl.bindTexture(l,r),t.profileData.profileTextureResize++;for(let i=0;i<6;i+=1){const r=new Uint8Array(256);t.gl.texImage2D(e[i],0,t.gl.RGBA,8,8,0,t.gl.RGBA,t.gl.UNSIGNED_BYTE,r),t.gl.texParameteri(l,t.gl.TEXTURE_MAG_FILTER,t.gl.NEAREST),t.gl.texParameteri(l,t.gl.TEXTURE_MIN_FILTER,t.gl.NEAREST),t.gl.texParameteri(l,t.gl.TEXTURE_WRAP_S,t.gl.CLAMP_TO_EDGE),t.gl.texParameteri(l,t.gl.TEXTURE_WRAP_T,t.gl.CLAMP_TO_EDGE)}return t.gl.bindTexture(l,null),{id:CABLES.uuid(),tex:r,cubemap:r,width:8,height:8,filter:s,wrap:a,unpackAlpha:!0,flip:!0,_fromData:!0,name:"emptyCubemapTexture",anisotropic:0}},i.getTempGradientTexture=function(t){if(t||console.error("[getTempGradientTexture] no cgl!"),t.tempTextureGradient)return t.tempTextureGradient;const e=new i(t),r=256,l=new Uint8Array(262144);for(let t=0;t<r;t++)for(let e=0;e<r;e++)l[4*(e+t*r)+0]=l[4*(e+t*r)+1]=l[4*(e+t*r)+2]=255-t,l[4*(e+t*r)+3]=255;return e.initFromData(l,r,r,i.FILTER_NEAREST,i.WRAP_REPEAT),t.tempTextureGradient=e,e},i.getTemporaryTexture=function(t,e,r,l,s,a,h){void 0===s&&(s=1),void 0===a&&(a=1),void 0===h&&(h=1);const o=new i(t),g=[];for(let t=0;t<e;t++)for(let i=0;i<e;i++)(i+t)%64<32?(g.push((200+t/e*25+i/e*25)*s),g.push((200+t/e*25+i/e*25)*a),g.push((200+t/e*25+i/e*25)*h)):(g.push((40+t/e*25+i/e*25)*s),g.push((40+t/e*25+i/e*25)*a),g.push((40+t/e*25+i/e*25)*h)),g.push(255);const _=new Uint8Array(g);return o.initFromData(_,e,e,r,l),o},i.createFromImage=function(t,e,r){const l=new i(t,r=r||{});return l.flip=!1,l.image=e,l.width=e.width,l.height=e.height,r.hasOwnProperty("wrap")&&(l.wrap=r.wrap),l.initTexture(e,r.filter),l},i.fromImage=function(t,e,r,l){console.error("deprecated texture from image...");const s=new i(t);return s.flip=!1,r&&(s.filter=r),l&&(s.wrap=l),s.image=e,s.initTexture(e),s},i.isPowerOfTwo=function(t){return 1==t||2==t||4==t||8==t||16==t||32==t||64==t||128==t||256==t||512==t||1024==t||2048==t||4096==t||8192==t||16384==t},i.getTexInfo=function(t){const e={};e.name=t.name,e["power of two"]=t.isPowerOfTwo(),e.size=t.width+" x "+t.height;let r=t.texTarget;return t.texTarget==t._cgl.gl.TEXTURE_2D&&(r="TEXTURE_2D"),e.target=r,e.unpackAlpha=t.unpackAlpha,t.cubemap&&(e.cubemap=!0),t.textureType==i.TYPE_FLOAT&&(e.textureType="TYPE_FLOAT"),t.textureType==i.TYPE_HALF_FLOAT?e.textureType="TYPE_HALF_FLOAT":t.textureType==i.TYPE_DEPTH?e.textureType="TYPE_DEPTH":t.textureType==i.TYPE_DEFAULT?e.textureType="TYPE_DEFAULT":e.textureType="UNKNOWN "+this.textureType,t.wrap==i.WRAP_CLAMP_TO_EDGE?e.wrap="CLAMP_TO_EDGE":t.wrap==i.WRAP_REPEAT?e.wrap="WRAP_REPEAT":t.wrap==i.WRAP_MIRRORED_REPEAT?e.wrap="WRAP_MIRRORED_REPEAT":e.wrap="UNKNOWN",t.filter==i.FILTER_NEAREST?e.filter="FILTER_NEAREST":t.filter==i.FILTER_LINEAR?e.filter="FILTER_LINEAR":t.filter==i.FILTER_MIPMAP?e.filter="FILTER_MIPMAP":e.filter="UNKNOWN",e.pixelFormat=t.pixelFormat||"unknown",e},i.FILTER_NEAREST=0,i.FILTER_LINEAR=1,i.FILTER_MIPMAP=2,i.WRAP_REPEAT=0,i.WRAP_MIRRORED_REPEAT=1,i.WRAP_CLAMP_TO_EDGE=2,i.TYPE_DEFAULT=0,i.TYPE_DEPTH=1,i.TYPE_FLOAT=2,i.PFORMATSTR_RGB565="RGB 5/6/5bit ubyte",i.PFORMATSTR_R8UB="R 8bit ubyte",i.PFORMATSTR_RG8UB="RG 8bit ubyte",i.PFORMATSTR_RGB8UB="RGB 8bit ubyte",i.PFORMATSTR_RGBA8UB="RGBA 8bit ubyte",i.PFORMATSTR_SRGBA8="SRGBA 8bit ubyte",i.PFORMATSTR_R11FG11FB10F="RGB 11/11/10bit float",i.PFORMATSTR_R16F="R 16bit float",i.PFORMATSTR_RG16F="RG 16bit float",i.PFORMATSTR_RGB16F="RGB 16bit float",i.PFORMATSTR_RGBA16F="RGBA 16bit float",i.PFORMATSTR_R32F="R 32bit float",i.PFORMATSTR_RGBA32F="RGBA 32bit float",i.PFORMATSTR_DEPTH="DEPTH",i.PIXELFORMATS=[i.PFORMATSTR_RGB565,i.PFORMATSTR_R8UB,i.PFORMATSTR_RG8UB,i.PFORMATSTR_RGB8UB,i.PFORMATSTR_RGBA8UB,i.PFORMATSTR_SRGBA8,i.PFORMATSTR_R11FG11FB10F,i.PFORMATSTR_R16F,i.PFORMATSTR_RG16F,i.PFORMATSTR_RGBA16F,i.PFORMATSTR_R32F,i.PFORMATSTR_RGBA32F],i.isPixelFormatFloat=t=>(t||"").indexOf("float")>-1,i.isPixelFormatHalfFloat=t=>(t||"").indexOf("float")>-1&&(t||"").indexOf("16bit")>-1;class r{constructor(t,e){this.id=CABLES.uuid(),this.name=e.name||"unknown cubemap texture",this._cgl=t,this.textureType=i.TYPE_DEFAULT,this._options=e,this._cubemapFaces=[this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_X,this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z],this.cubemap=this.tex=this._cgl.gl.createTexture(),this.texTarget=this._cgl.gl.TEXTURE_CUBE_MAP,this.width=8,this.height=8,this.filter=e.filter||CGL.Texture.FILTER_NEAREST,this.wrap=e.wrap||CGL.Texture.WRAP_CLAMP_TO_EDGE,this.unpackAlpha=e.unpackAlpha||!0,this.flip=e.flip||!0,e.hasOwnProperty("pixelFormat")&&e.pixelFormat||(e.isFloatingPointTexture?e.pixelFormat=i.PFORMATSTR_RGBA32F:e.pixelFormat=i.PFORMATSTR_RGBA8UB),this.pixelFormat=e.pixelFormat,this._cgl.profileData.profileTextureNew++,this.setSize(e.width,e.height)}getInfo(){return{pixelFormat:this.pixelFormat}}setSize(t,e){this.delete(),this.cubemap=this.tex=this._cgl.gl.createTexture(),this._cgl.checkFrameStarted("cubemap corelib setsize"),(t!=t||t<=0||!t)&&(t=8),(e!=e||e<=0||!e)&&(e=8),(t>this._cgl.maxTexSize||e>this._cgl.maxTexSize)&&console.error("texture size too big! "+t+"x"+e+" / max: "+this._cgl.maxTexSize),t=Math.min(t,this._cgl.maxTexSize),e=Math.min(e,this._cgl.maxTexSize),t=Math.floor(t),e=Math.floor(e),this.width=t,this.height=e,this._cgl.gl.bindTexture(this.texTarget,this.tex),this._cgl.profileData.profileTextureResize++;const r=i.setUpGlPixelFormat(this._cgl,this._options.pixelFormat);this.pixelFormat=r.pixelFormat,CGL.Texture.isPixelFormatHalfFloat(r.pixelFormat)?(this._cgl.enableExtension("EXT_color_buffer_half_float"),this._cgl.enableExtension("OES_texture_float_linear")||(this.filter=i.FILTER_NEAREST)):CGL.Texture.isPixelFormatFloat(r.pixelFormat)&&(this._cgl.enableExtension("OES_texture_float_linear")||(console.log("no linear pixelformat,using nearest"),this.filter=i.FILTER_NEAREST));for(let t=0;t<6;t++)this._cgl.gl.texImage2D(this._cubemapFaces[t],0,r.glInternalFormat,this.width,this.height,0,r.glDataFormat,r.glDataType,null);this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null)}_setFilter(){if(this._cgl.checkFrameStarted("cubemap corelib"),this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),CGL.Texture.isPixelFormatFloat(this.pixelFormat)&&this.filter==CGL.Texture.FILTER_MIPMAP&&(console.log("texture: HDR and mipmap filtering at the same time is not possible"),this.filter=CGL.Texture.FILTER_LINEAR),1!=this._cgl.glVersion||i.isPowerOfTwo()){if(this.wrap==CGL.Texture.WRAP_CLAMP_TO_EDGE)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE);else if(this.wrap==CGL.Texture.WRAP_REPEAT)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.REPEAT);else{if(this.wrap!=CGL.Texture.WRAP_MIRRORED_REPEAT)throw new Error("[CubemapTexture] unknown texture filter!"+this.filter);this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.MIRRORED_REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.MIRRORED_REPEAT)}if(this.filter==CGL.Texture.FILTER_NEAREST)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST);else if(this.filter==CGL.Texture.FILTER_LINEAR)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR);else{if(this.filter!=CGL.Texture.FILTER_MIPMAP)throw new Error("[CubemapTexture] unknown texture filter!"+this.filter);this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR_MIPMAP_LINEAR)}}else this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE),this.filter=CGL.Texture.FILTER_NEAREST,this.wrap=CGL.Texture.WRAP_CLAMP_TO_EDGE}updateMipMap(){this.filter==CGL.Texture.FILTER_MIPMAP&&(this._cgl.gl.bindTexture(this.texTarget,this.tex),this._cgl.gl.generateMipmap(this.texTarget),this._cgl.profileData.profileGenMipMap++)}delete(){this._cgl.gl.deleteTexture(this.tex)}}CGL.CubemapFramebuffer=class{constructor(t,e,i,l){this._cgl=t,this.width=e||8,this.height=i||8,this._cubemapProperties=[{face:this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_X,lookAt:vec3.fromValues(1,0,0),up:vec3.fromValues(0,-1,0)},{face:this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,lookAt:vec3.fromValues(-1,0,0),up:vec3.fromValues(0,-1,0)},{face:this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,lookAt:vec3.fromValues(0,1,0),up:vec3.fromValues(0,0,1)},{face:this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,lookAt:vec3.fromValues(0,-1,0),up:vec3.fromValues(0,0,-1)},{face:this._cgl.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,lookAt:vec3.fromValues(0,0,1),up:vec3.fromValues(0,-1,0)},{face:this._cgl.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,lookAt:vec3.fromValues(0,0,-1),up:vec3.fromValues(0,-1,0)}],this._lookAtTemp=vec3.fromValues(0,0,0),this.camPos=vec3.fromValues(0,0,0),this._modelMatrix=mat4.create(),this._viewMatrix=mat4.create(),this._projectionMatrix=mat4.perspective(mat4.create(),90*CGL.DEG2RAD,1,.1,1e3),this._depthRenderbuffer=null,this._framebuffer=null,this._depthbuffer=null,this._textureDepth=null,this._options=l||{},this.name=this._options.name||"unknown cubemapframebuffer",this._options.hasOwnProperty("numRenderBuffers")||(this._options.numRenderBuffers=1),this._options.hasOwnProperty("depth")||(this._options.depth=!0),this._options.hasOwnProperty("clear")||(this._options.clear=!0),this._options.hasOwnProperty("multisampling")||(this._options.multisampling=!1,this._options.multisamplingSamples=0),this._options.multisamplingSamples&&(this._cgl.glSlowRenderer&&(this._options.multisamplingSamples=0),this._cgl.gl.MAX_SAMPLES?this._options.multisamplingSamples=Math.min(this._cgl.gl.getParameter(this._cgl.gl.MAX_SAMPLES),this._options.multisamplingSamples):this._options.multisamplingSamples=0),this._options.hasOwnProperty("filter")||(this._options.filter=CGL.Texture.FILTER_LINEAR),this._options.hasOwnProperty("wrap")||(this._options.wrap=CGL.Texture.WRAP_CLAMP_TO_EDGE),this._cgl.checkFrameStarted("cubemap framebuffer");let s=l.pixeFormat;!s&&l.isFloatingPointTexture&&(s=CGL.Texture.PFORMATSTR_RGBA32F),this.texture=new r(this._cgl,{width:this.width,height:this.height,pixelFormat:l.pixelFormat,filter:this._options.filter,wrap:this._options.wrap,name:this.name+" cubemaptexture"}),this.initializeRenderbuffers(),this.setSize(this.width,this.height)}initializeRenderbuffers(){this._framebuffer=this._cgl.gl.createFramebuffer(),this._depthbuffer=this._cgl.gl.createRenderbuffer(),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._framebuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT16,this.width,this.height),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null)}getWidth(){return this.width}getHeight(){return this.height}getGlFrameBuffer(){return this._framebuffer}getDepthRenderBuffer(){return this._depthRenderbuffer}getTextureColor(){return this.texture}getTextureDepth(){return this._textureDepth}dispose(){this.texture&&(this.texture=this.texture.delete()),this._framebuffer&&this._cgl.gl.deleteFramebuffer(this._framebuffer),this._depthRenderbuffer&&this._cgl.gl.deleteRenderbuffer(this._depthbuffer)}delete(){this.dispose()}setSize(t,e){this._cgl.printError("before cubemap setsize"),this.width=Math.floor(t),this.height=Math.floor(e),this.width=Math.min(this.width,this._cgl.maxTexSize),this.height=Math.min(this.height,this._cgl.maxTexSize),this._cgl.profileData.profileFrameBuffercreate++,this._framebuffer=this._cgl.gl.createFramebuffer(),this._depthbuffer=this._cgl.gl.createRenderbuffer(),this.texture.setSize(this.width,this.height),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._framebuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT16,this.width,this.height),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._cgl.gl.isFramebuffer(this._framebuffer)||console.error("invalid framebuffer...");const i=this._cgl.gl.checkFramebufferStatus(this._cgl.gl.FRAMEBUFFER);this.checkErrorsByStatus(i),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_CUBE_MAP,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.printError("cubemap setsize")}checkErrorsByStatus(t){switch(t){case this._cgl.gl.FRAMEBUFFER_COMPLETE:break;case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw console.error("FRAMEBUFFER_INCOMPLETE_ATTACHMENT...",this.width,this.height,this.texture.tex,this._depthBuffer),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw console.error("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw console.error("FRAMEBUFFER_INCOMPLETE_DIMENSIONS"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");case this._cgl.gl.FRAMEBUFFER_UNSUPPORTED:throw console.error("FRAMEBUFFER_UNSUPPORTED"),new Error("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");case 36059:console.error("Incomplete: FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER from ext. Or Safari/iOS undefined behaviour.");break;default:throw console.error("incomplete framebuffer",t),console.log(this),new Error("Incomplete framebuffer: "+t)}}setFilter(t){this.texture.filter=t,this.texture.setSize(this.width,this.height)}setCamPos(t){this.camPos=t||this.camPos}setMatrices(t,e,i){this._modelMatrix=t||this._modelMatrix,this._viewMatrix=e||this._viewMatrix,this._projectionMatrix=i||this._projectionMatrix}renderStart(){this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_CUBE_MAP,this.texture.tex),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._framebuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._cgl.gl.viewport(0,0,this.width,this.height),this._cgl.pushGlFrameBuffer(this._framebuffer),this._cgl.pushFrameBuffer(this)}renderStartCubemapFace(t){this._cgl.pushModelMatrix(),this._cgl.pushViewMatrix(),this._cgl.pushPMatrix(),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cubemapProperties[t].face,this.texture.tex,0),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthbuffer),this._options.clear&&(this._cgl.gl.clearColor(0,0,0,1),this._cgl.gl.clear(this._cgl.gl.COLOR_BUFFER_BIT|this._cgl.gl.DEPTH_BUFFER_BIT)),this.setMatricesCubemapFace(t)}setMatricesCubemapFace(t){mat4.copy(this._cgl.mMatrix,this._modelMatrix),vec3.add(this._lookAtTemp,this.camPos,this._cubemapProperties[t].lookAt),mat4.lookAt(this._cgl.vMatrix,this.camPos,this._lookAtTemp,this._cubemapProperties[t].up),mat4.copy(this._cgl.pMatrix,this._projectionMatrix)}renderEndCubemapFace(){this._cgl.popPMatrix(),this._cgl.popModelMatrix(),this._cgl.popViewMatrix()}renderEnd(){this._cgl.profileData.profileFramebuffer++,1!==this._cgl.glVersion&&this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER,this._framebuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.popGlFrameBuffer()),this._cgl.popFrameBuffer(),this._cgl.resetViewPort(),this.updateMipMap()}updateMipMap(){this.texture&&(this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_CUBE_MAP,this.texture.tex),this.texture.updateMipMap(),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_CUBE_MAP,null))}},((this.CGL=this.CGL||{}).COREMODULES=this.CGL.COREMODULES||{}).Cubemapframebuffer={}.Cubemapframebuffer})();